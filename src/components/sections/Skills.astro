---
import Section from "../Section.astro";
import { useTranslations, type Lang } from "@/lib/i18n";
// import HTML from "@/icons/html.astro";
// import CSS from "@/icons/css.astro";
// import JavaScript from "@/icons/javascript.astro";
// import TypeScript from "@/icons/type.astro";
// import React from "@/icons/react.astro";
// import Node from "@/icons/node.astro";
// import MySQL from "@/icons/sql.astro";
// import Git from "@/icons/git.astro";
// import GitHub from "@/icons/GitHub.astro";
// import Tailwind from "@/icons/tailwind.astro";
// import Next from "@/icons/next.astro";
import { skills } from "@cv";
// import Swift from "@/icons/swift.astro";
// import SwiftUI from "@/icons/swiftui.astro";
// import Kotlin from "@/icons/kotlin.astro";
// import Flutter from "@/icons/flutter.astro";
// import Figma from "@/icons/Figma.astro";
// import Gitlab from "@/icons/Gitlab.astro";

// const SKILLS_ICONS: Record<string, any> = {
// 	HTML,
// 	CSS,
// 	JavaScript,
// 	TypeScript,
// 	React,
// 	Node,
// 	MySQL,
// 	Git,
// 	GitHub,
// 	Next,
// 	Tailwind,
// 	Swift,
// 	SwiftUI,
// 	Kotlin,
// 	Flutter,
// 	Figma,
// 	Gitlab,
// };
interface Props { lang?: Lang; className?: string }
const { lang = 'fr' } = Astro.props as Props
const t = useTranslations(lang)
---

<Section className={Astro.props.className} title={t('skillsTitle')}>
        <ul class="[&>li>svg]:text-skin-hue inline-flex flex-wrap gap-6 [&>li>svg]:size-5 [&>li]:text-sm">
                {
                        skills.map(({ name, level, keywords }) => {
                                // const iconName = name === "Next.js" ? "Next" : name;
                                // const Icon = SKILLS_ICONS[iconName];

                                return (
                                        <div
                                                x-data="{ open: false }"
                                                @mouseenter="open = true"
                                                @mouseleave="open = false"
                                                class="relative"
                                        >
                                                <li
                                                        class="
                                                        bg-skin-hue/100 border-skin-hue/20 text-skin-inverted
                                                        border-skin-hue/100
                                                        bg-skin-button-accent/80
                                                        flex items-center gap-1
                                                        rounded-md
                                                        px-2 py-0.5
                                                        text-xs
                                                        text-skin-base
                                                        print:border-none print:bg-transparent print:p-0 print:text-zinc-800">
                                                        <!-- je commente l'affichage des icons parce que je les ai pas tous...
                                                          {Icon && <Icon />}
                                                        -->
                                                        <span>{name}</span>
                                                </li>
                                                <div
                                                        x-show="open"
                                                        x-cloak
                                                        class="tooltip absolute left-1/2 top-full z-10 mt-1 w-max -translate-x-1/2 rounded bg-white dark:bg-gray-800 p-2 text-xs shadow"
                                                >
                                                        <div class="font-semibold">{t('level')} : {level}</div>
                                                        <ul class="mt-1 flex flex-wrap gap-1">
                                                                {keywords?.map(keyword => (
                                                                        <li class="rounded bg-skin-button-muted px-1 dark:bg-gray-700">{keyword}</li>
                                                                ))}
                                                        </ul>
                                                </div>
                                        </div>
                                );
                        })
                }
        </ul>
</Section>

<style>
        .tooltip {
                @apply text-skin-base dark:text-skin-inverted;
        }
</style>
