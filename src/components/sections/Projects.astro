---
import Git from "@/icons/git.astro";
import Arrow from "@/icons/Arrow.astro";
import Section from "../Section.astro";

const { projects, locale } = Astro.props;
const showProjectText = locale === "fr" ? "Voir le projet" : "See project";
const showSourceTextOf = locale === "fr" ? "Voir le code source de" : "See source code of";
const projectText = locale === "fr" ? "Exmples de réalisations" : "Achievements Examples";
const projectSubTitleText = locale === "fr" ? "Quelques projets représentatifs de ces deux dernières années..." : "Some representative projects from the last two years...";	
---

<Section className={Astro.props.className} title={projectText} id="projects">
	<span class="text-skin-muted" style="font-size: 14px;">{projectSubTitleText}</span>
	<div class="grid grid-cols-1 gap-3 md:grid-cols-2 print:flex print:flex-col">
		{
			projects.map(({ url, description, highlights, name, isActive, github }) => {
				return (
					<div 
						role="contentinfo" 
						class="bg-white dark:bg-gray-800 rounded-lg px-6 py-8 ring shadow-xl ring-gray-900/5">
						<div class="flex items-center justify-between space-x-[10px]">
							<div class="flex items-center gap-2">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-folder size-4">
									<path d="M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z" />
								</svg>
								<div class="flex items-center gap-[6px]">
									{isActive ? (
										<a 
											class="text-skin-link hover:text-skin-muted group flex items-center gap-[6px] text-lg decoration-dotted underline-offset-[5px] hover:underline" 
											href={url} 
											title={`${showProjectText} ${name}`} 
											target="_blank"
											rel="noopener noreferrer"
											aria-label={`${showProjectText} ${name}`}
										>
											{name}
											<span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5">
												<Arrow />
											</span>
										</a>
									) : (
										<span>{name}</span>
									)}
								</div>
							</div>

							{github && (
								<a 
									href={github} 
									title={`${showSourceTextOf} ${name}`}
									aria-label={`${showSourceTextOf}  ${name}`}
									target="_blank" 
									rel="noopener noreferrer"
									class="opacity-75 transition-opacity duration-100 hover:opacity-100"
								>
									<Git />
								</a>
							)}
						</div>

						<p class="py-3 text-sm text-skin-base">{description}</p>
						<ul class="mt-1 text-sm text-skin-muted">
							{highlights.map((highlight) => {
								return <li>{highlight}</li>;
							})}
						</ul>
					</div>
				);
			})
		}
	</div>
</Section>

<style>
	ul {
		@apply ml-4 list-disc space-y-1;
		li {
			@apply text-skin-muted;
		}
	}

	footer {
		display: flex;
		flex-wrap: wrap;
		gap: 4px;
		font-size: 0.6rem;
	}

	footer span {
		border-radius: 6px;
		background: #eee;
		color: #444;
		font-size: 0.6rem;
		font-weight: 500;
		padding: 0.2rem 0.6rem;
	}
	@keyframes flicker {
		0% {
			opacity: 1;
		}
		50% {
			opacity: 0.25;
		}
		100% {
			opacity: 1;
		}
	}
</style>
